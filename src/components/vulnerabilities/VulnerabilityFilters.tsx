
import React from 'react';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectGroup, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Button } from '@/components/ui/button';
import { SearchIcon, FilterIcon, XIcon } from 'lucide-react';

interface VulnerabilityFiltersProps {
  searchQuery: string;
  onSearchChange: (query: string) => void;
  severityFilter: string;
  onSeverityChange: (severity: string) => void;
  onClearFilters: () => void;
}

const VulnerabilityFilters: React.FC<VulnerabilityFiltersProps> = ({
  searchQuery,
  onSearchChange,
  severityFilter,
  onSeverityChange,
  onClearFilters,
}) => {
  return (
    <div className="flex flex-col md:flex-row gap-4 mb-6">
      <div className="relative flex-grow">
        <SearchIcon className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4" />
        <Input
          placeholder="Search vulnerabilities..."
          value={searchQuery}
          onChange={(e) => onSearchChange(e.target.value)}
          className="pl-10"
        />
      </div>
      <div className="flex flex-col sm:flex-row gap-2">
        <div className="flex items-center space-x-2">
          <FilterIcon className="text-muted-foreground h-4 w-4" />
          <Select value={severityFilter} onValueChange={onSeverityChange}>
            <SelectTrigger className="w-40">
              <SelectValue placeholder="Filter by severity" />
            </SelectTrigger>
            <SelectContent>
              <SelectGroup>
                <SelectItem value="all">All Severities</SelectItem>
                <SelectItem value="critical">Critical</SelectItem>
                <SelectItem value="high">High</SelectItem>
                <SelectItem value="medium">Medium</SelectItem>
                <SelectItem value="low">Low</SelectItem>
              </SelectGroup>
            </SelectContent>
          </Select>
        </div>
        {(searchQuery || severityFilter !== 'all') && (
          <Button 
            variant="ghost" 
            size="icon" 
            onClick={onClearFilters}
            className="h-10 w-10"
          >
            <XIcon className="h-4 w-4" />
          </Button>
        )}
      </div>
    </div>
  );
};

export default VulnerabilityFilters;
